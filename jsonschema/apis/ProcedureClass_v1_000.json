{
	"openapi": "3.0.1",
	"servers": [
		{
			"description": "API para as classes de procedimentos de saúde",
			"url": "{{host}}/api/healthcare/v1",
			"variables": {
				"serverUrl": {
					"default": "localhost"
				},
				"serverHttpPort": {
					"default": "1315"
				}
			}
		}
	],
	"info": {
		"description": "",
		"version": "1.000",
		"title": "Procedure Class",
		"contact": {
			"name": "T-Talk",
			"url": "http://api.totvs.com.br",
			"email": "comiteintegracao@totvs.com.br"
		},
		"x-totvs": {
			"messageDocumentation": {
				"name": "ProcedureClass",
				"description": "Classes de procedimentos de saúde",
				"segment": "Saúde"
			},
			"productInformation": [
				{
					"product": "ProSaude",
					"contact": "healthcare.mobile@totvs.com.br",
					"description": "Aplicativo para os beneficiários de plano de saúde"
				}
			]
		}
	},
	"paths": {
		"/proceduresClasses/": {
			"get": {
				"tags": [
					"proceduresClasses"
				],
				"operationId": "getProcedureClassList",
				"summary": "Classes de procedimentos de saúde",
				"x-totvs": {
					"productInformation": [
						{
							"product": "ProSaude",
							"available": true,
							"note": "Este verbo esta disponivel com todos os parametros"
						}
					]
				},
				"description": "Retorna uma mensagem do tipo coleção com todas as classes de procedimentos. Os resultados podem ser filtrados através dos parâmetros <b>classType</b> e <b>typeDrug</b>.",
				"parameters": [
					{
						"$ref": "https://raw.githubusercontent.com/totvs/ttalk-standard-message/master/jsonschema/apis/types/totvsApiTypesBase.json#/parameters/Page"
					},
					{
						"$ref": "https://raw.githubusercontent.com/totvs/ttalk-standard-message/master/jsonschema/apis/types/totvsApiTypesBase.json#/parameters/PageSize"
					},
					{
						"$ref": "https://raw.githubusercontent.com/totvs/ttalk-standard-message/master/jsonschema/apis/types/totvsApiTypesBase.json#/parameters/Order"
					},
					{
						"$ref": "https://raw.githubusercontent.com/totvs/ttalk-standard-message/master/jsonschema/apis/types/totvsApiTypesBase.json#/parameters/Fields"
					},
					{
						"$ref": "#/components/parameters/ContentType"
					},
					{
						"$ref": "https://raw.githubusercontent.com/totvs/ttalk-standard-message/master/jsonschema/apis/types/totvsApiTypesBase.json#/parameters/Authorization"
					},
					{
						"$ref": "#/components/parameters/ExpiresAt"
					},
					{
						"$ref": "#/components/parameters/ClassType"
					},
					{
						"$ref": "#/components/parameters/TypeDrug"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "https://raw.githubusercontent.com/totvs/ttalk-standard-message/master/jsonschema/schemas/ProcedureClass_1_000.json#/definitions/PagedProcedureClass"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "https://raw.githubusercontent.com/totvs/ttalk-standard-message/master/jsonschema/apis/types/totvsApiTypesBase.json#/definitions/ErrorModelBase"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "https://raw.githubusercontent.com/totvs/ttalk-standard-message/master/jsonschema/apis/types/totvsApiTypesBase.json#/definitions/ErrorModelBase"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "https://raw.githubusercontent.com/totvs/ttalk-standard-message/master/jsonschema/apis/types/totvsApiTypesBase.json#/definitions/ErrorModelBase"
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "https://raw.githubusercontent.com/totvs/ttalk-standard-message/master/jsonschema/apis/types/totvsApiTypesBase.json#/definitions/ErrorModelBase"
								}
							}
						}
					}
				}
			}
		},
		"/proceduresClasses/{procedureClassCode}": {
			"get": {
				"tags": [
					"proceduresClasses"
				],
				"operationId": "getProcedureClass",
				"summary": "Classe de procedimento de saúde",
				"description": "Retorna a classe de procedimento de saúde do código especificado",
				"parameters": [
					{
						"$ref": "#/components/parameters/ContentType"
					},
					{
						"$ref": "https://raw.githubusercontent.com/totvs/ttalk-standard-message/master/jsonschema/apis/types/totvsApiTypesBase.json#/parameters/Authorization"
					},
					{
						"$ref": "#/components/parameters/ExpiresAt"
					},
					{
						"$ref": "#/components/parameters/ProcedureClassCode"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "https://raw.githubusercontent.com/totvs/ttalk-standard-message/master/jsonschema/schemas/ProcedureClass_1_000.json#/definitions/ProcedureClass"
								}
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "https://raw.githubusercontent.com/totvs/ttalk-standard-message/master/jsonschema/apis/types/totvsApiTypesBase.json#/definitions/ErrorModelBase"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "https://raw.githubusercontent.com/totvs/ttalk-standard-message/master/jsonschema/apis/types/totvsApiTypesBase.json#/definitions/ErrorModelBase"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "https://raw.githubusercontent.com/totvs/ttalk-standard-message/master/jsonschema/apis/types/totvsApiTypesBase.json#/definitions/ErrorModelBase"
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "https://raw.githubusercontent.com/totvs/ttalk-standard-message/master/jsonschema/apis/types/totvsApiTypesBase.json#/definitions/ErrorModelBase"
								}
							}
						}
					}
				}
			}
		},
		"/proceduresClasses/{procedureClassCode}/procedures": {
			"get": {
				"tags": [
					"proceduresClasses"
				],
				"operationId": "getProceduresList",
				"summary": "Procedimentos da classe de procedimento de saúde",
				"x-totvs": {
					"productInformation": [
						{
							"product": "ProSaude",
							"available": true,
							"note": "Este verbo esta disponivel com todos os parametros"
						}
					]
				},
				"description": "Retorna uma mensagem do tipo coleção com todos os procedimentos da classe de procedimento. Os resultados podem ser filtrados através dos parâmetros <b>tableCode</b>, <b>eventType</b>, <b>active</b>, <b>allowedGender</b> e <b>allowRefund</b>. E ordenados pelos campos <b>tableCode</b>, <b>procedureCode</b>, <b>eventType</b> e <b>active</b>.",
				"parameters": [
					{
						"$ref": "https://raw.githubusercontent.com/totvs/ttalk-standard-message/master/jsonschema/apis/types/totvsApiTypesBase.json#/parameters/Page"
					},
					{
						"$ref": "https://raw.githubusercontent.com/totvs/ttalk-standard-message/master/jsonschema/apis/types/totvsApiTypesBase.json#/parameters/PageSize"
					},
					{
						"$ref": "https://raw.githubusercontent.com/totvs/ttalk-standard-message/master/jsonschema/apis/types/totvsApiTypesBase.json#/parameters/Order"
					},
					{
						"$ref": "https://raw.githubusercontent.com/totvs/ttalk-standard-message/master/jsonschema/apis/types/totvsApiTypesBase.json#/parameters/Fields"
					},
					{
						"$ref": "#/components/parameters/ContentType"
					},
					{
						"$ref": "https://raw.githubusercontent.com/totvs/ttalk-standard-message/master/jsonschema/apis/types/totvsApiTypesBase.json#/parameters/Authorization"
					},
					{
						"$ref": "#/components/parameters/ExpiresAt"
					},
					{
						"$ref": "#/components/parameters/ProcedureClassCode"
					},
					{
						"$ref": "#/components/parameters/TableCode"
					},
					{
						"$ref": "#/components/parameters/EventType"
					},
					{
						"$ref": "#/components/parameters/Active"
					},
					{
						"$ref": "#/components/parameters/AllowedGender"
					},
					{
						"$ref": "#/components/parameters/AllowRefund"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "https://raw.githubusercontent.com/totvs/ttalk-standard-message/master/jsonschema/schemas/ProcedureClass_1_000.json#/definitions/PagedProcedures"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "https://raw.githubusercontent.com/totvs/ttalk-standard-message/master/jsonschema/apis/types/totvsApiTypesBase.json#/definitions/ErrorModelBase"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "https://raw.githubusercontent.com/totvs/ttalk-standard-message/master/jsonschema/apis/types/totvsApiTypesBase.json#/definitions/ErrorModelBase"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "https://raw.githubusercontent.com/totvs/ttalk-standard-message/master/jsonschema/apis/types/totvsApiTypesBase.json#/definitions/ErrorModelBase"
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "https://raw.githubusercontent.com/totvs/ttalk-standard-message/master/jsonschema/apis/types/totvsApiTypesBase.json#/definitions/ErrorModelBase"
								}
							}
						}
					}
				}
			}
		}
	},
	"components": {
		"parameters": {
			"ContentType": {
				"name": "Content-Type",
				"in": "header",
				"description": "Tipo do conteúdo da requisição",
				"required": true,
				"schema": {
					"type": "string"
				}
			},
			"ExpiresAt": {
				"name": "Expires_at",
				"in": "header",
				"description": "Data e hora da expiração do token em segundos",
				"required": true,
				"schema": {
					"type": "string"
				}
			},
			"TypeDrug": {
				"name": "typeDrug",
				"in": "query",
				"description": "Informe se a classe é de medicamento",
				"required": false,
				"schema": {
					"type": "string",
					"enum": [
						"1 - Sim",
						"2 - Não"
					]
				}
			},
			"ClassType": {
				"name": "classType",
				"in": "query",
				"description": "Tipo da classe de procedimento",
				"required": false,
				"schema": {
					"type": "string",
					"enum": [
						"0 - Não aplicável",
						"1 - Medicamento",
						"2 - Seriado"
					]
				}
			},
			"ProcedureClassCode": {
				"name": "procedureClassCode",
				"in": "path",
				"description": "Código da clase de procedimento",
				"required": true,
				"schema": {
					"type": "string"
				}
			},
			"TableCode": {
				"name": "tableCode",
				"in": "query",
				"description": "Código da tabela do procedimento",
				"required": false,
				"schema": {
					"type": "string"
				}
			},
			"EventType": {
				"name": "eventType",
				"in": "query",
				"description": "Tipo do evento do procedimento",
				"required": false,
				"schema": {
					"type": "string",
					"enum": [
						"1 - Clinico",
						"2 - Cirurgico",
						"3 - Ambos",
						"4 - Outros"
					]
				}
			},
			"Active": {
				"name": "active",
				"in": "query",
				"description": "Procedimento ativo",
				"required": false,
				"schema": {
					"type": "string",
					"enum": [
						"0 - Não",
						"1 - Sim"
					]
				}
			},
			"AllowedGender": {
				"name": "allowedGender",
				"in": "query",
				"description": "Gênero permitido a executar aquele procedimento",
				"required": false,
				"schema": {
					"type": "string",
					"enum": [
						"1 - Masculino",
						"2 - Feminino",
						"3 - Ambos"
					]
				}
			},
			"AllowRefund": {
				"name": "allowRefund",
				"in": "query",
				"description": "Procedimento permite solicitar reembolso",
				"required": false,
				"schema": {
					"type": "string",
					"enum": [
						"0 - Não",
						"1 - Sim"
					]
				}
			}
		}
	}
}